mport pygame
import random

# Initialize pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 400, 600
BALL_RADIUS = 20
SPEED = 5
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Setup screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Boinkers Clone")

# Ball properties
ball_x = WIDTH // 2
ball_y = HEIGHT // 2
ball_dx = random.choice([-SPEED, SPEED])
ball_dy = -SPEED

score = 0
font = pygame.font.Font(None, 36)
clock = pygame.time.Clock()

running = True
while running:
    screen.fill(WHITE)

    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            mx, my = pygame.mouse.get_pos()
            if (ball_x - mx) ** 2 + (ball_y - my) ** 2 <= BALL_RADIUS ** 2:
                score += 1
                ball_dx = random.choice([-SPEED, SPEED])
                ball_dy = -SPEED
                ball_y -= 20  # Bounce effect

    # Ball movement
    ball_x += ball_dx
    ball_y += ball_dy

    # Wall collision
    if ball_x <= BALL_RADIUS or ball_x >= WIDTH - BALL_RADIUS:
        ball_dx = -ball_dx
    if ball_y <= BALL_RADIUS:
        ball_dy = SPEED
    if ball_y >= HEIGHT - BALL_RADIUS:
        score = 0  # Reset score on fall
        ball_x, ball_y = WIDTH // 2, HEIGHT // 2
        ball_dx, ball_dy = random.choice([-SPEED, SPEED]), -SPEED

    # Draw ball
    pygame.draw.circle(screen, RED, (ball_x, ball_y), BALL_RADIUS)

    # Display score
    score_text = font.render(f"Score: {score}", True, (0, 0, 0))
    screen.blit(score_text, (10, 10))

    pygame.display.flip()
    clock.tick(30)

pygame.quit()
